#!/usr/bin/env node

var program  = require('commander');
var pkg      = require('../package.json');
var chalk    = require('chalk');
var red      = chalk.red;
var ui       = require('../lib/util/ui');

// Enable logging
ui.silent = false;

// Commands
var PackageCommand = require('../lib/commands/package');
var DeployCommand  = require('../lib/commands/deploy');

program
  .version(pkg.version)
  .description("Tool for building Node packages to be deployed to AWS Lambda");

program.command('package <package-directory> <output-zip>')
  .description('Builds dependencies for the specified package and saves the package plus dependencies in the specific zip file')
  .action(function(packageDirectory, outputZip) {
    PackageCommand.run(packageDirectory, outputZip);
  });

program.command('deploy')
  .description('Provisions an AWS CloudFormation stack for building dependencies')
  .action(function() {
    DeployCommand.run();
  });

program.command('*', null, { noHelp: true } )
  .action(function (cmd){
    console.log(red("  " + cmd + "  is not a valid command."));
    program.outputHelp();
  });

// If no command is provided, print help and exit
if (process.argv.length == 2) {
  program.parse(process.argv);
  program.outputHelp();
  process.exit();
}

program.parse(process.argv);
